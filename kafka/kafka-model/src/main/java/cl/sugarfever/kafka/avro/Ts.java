/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cl.sugarfever.kafka.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Ts extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7498612035082651039L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Ts\",\"namespace\":\"cl.sugarfever.kafka.avro\",\"fields\":[{\"name\":\"id_ts\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}},{\"name\":\"idpagina\",\"type\":\"int\"},{\"name\":\"sexo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"edad\",\"type\":\"int\",\"default\":0},{\"name\":\"nombre\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"medidas\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"seccion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"depilacion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"ubicacion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"horario\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"descripcion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"atencion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"telefono\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"0000 0000\"},{\"name\":\"estatura\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"valor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"video\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"imagen\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"idjob\",\"type\":\"long\",\"default\":0},{\"name\":\"sitio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"cartel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"ciudad\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"servicios\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Servicio\",\"fields\":[{\"name\":\"idservicio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}},{\"name\":\"nombre\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"adicional\",\"type\":\"boolean\"}]},\"java-class\":\"java.util.List\"},\"default\":[]},{\"name\":\"imagenes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Imagen\",\"fields\":[{\"name\":\"idimagen\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"java-class\":\"java.util.List\"},\"default\":[]},{\"name\":\"fecharegistro\",\"type\":\"long\",\"default\":0,\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Ts> ENCODER =
      new BinaryMessageEncoder<Ts>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Ts> DECODER =
      new BinaryMessageDecoder<Ts>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Ts> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Ts> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Ts> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Ts>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Ts to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Ts from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Ts instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Ts fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String id_ts;
   private int idpagina;
   private java.lang.String sexo;
   private int edad;
   private java.lang.String nombre;
   private java.lang.String medidas;
   private java.lang.String seccion;
   private java.lang.String depilacion;
   private java.lang.String ubicacion;
   private java.lang.String horario;
   private java.lang.String descripcion;
   private java.lang.String atencion;
   private java.lang.String telefono;
   private java.lang.String estatura;
   private java.lang.String valor;
   private java.lang.String video;
   private java.lang.String imagen;
   private long idjob;
   private java.lang.String sitio;
   private java.lang.String cartel;
   private java.lang.String ciudad;
   private java.util.List<cl.sugarfever.kafka.avro.Servicio> servicios;
   private java.util.List<cl.sugarfever.kafka.avro.Imagen> imagenes;
   private long fecharegistro;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Ts() {}

  /**
   * All-args constructor.
   * @param id_ts The new value for id_ts
   * @param idpagina The new value for idpagina
   * @param sexo The new value for sexo
   * @param edad The new value for edad
   * @param nombre The new value for nombre
   * @param medidas The new value for medidas
   * @param seccion The new value for seccion
   * @param depilacion The new value for depilacion
   * @param ubicacion The new value for ubicacion
   * @param horario The new value for horario
   * @param descripcion The new value for descripcion
   * @param atencion The new value for atencion
   * @param telefono The new value for telefono
   * @param estatura The new value for estatura
   * @param valor The new value for valor
   * @param video The new value for video
   * @param imagen The new value for imagen
   * @param idjob The new value for idjob
   * @param sitio The new value for sitio
   * @param cartel The new value for cartel
   * @param ciudad The new value for ciudad
   * @param servicios The new value for servicios
   * @param imagenes The new value for imagenes
   * @param fecharegistro The new value for fecharegistro
   */
  public Ts(java.lang.String id_ts, java.lang.Integer idpagina, java.lang.String sexo, java.lang.Integer edad, java.lang.String nombre, java.lang.String medidas, java.lang.String seccion, java.lang.String depilacion, java.lang.String ubicacion, java.lang.String horario, java.lang.String descripcion, java.lang.String atencion, java.lang.String telefono, java.lang.String estatura, java.lang.String valor, java.lang.String video, java.lang.String imagen, java.lang.Long idjob, java.lang.String sitio, java.lang.String cartel, java.lang.String ciudad, java.util.List<cl.sugarfever.kafka.avro.Servicio> servicios, java.util.List<cl.sugarfever.kafka.avro.Imagen> imagenes, java.lang.Long fecharegistro) {
    this.id_ts = id_ts;
    this.idpagina = idpagina;
    this.sexo = sexo;
    this.edad = edad;
    this.nombre = nombre;
    this.medidas = medidas;
    this.seccion = seccion;
    this.depilacion = depilacion;
    this.ubicacion = ubicacion;
    this.horario = horario;
    this.descripcion = descripcion;
    this.atencion = atencion;
    this.telefono = telefono;
    this.estatura = estatura;
    this.valor = valor;
    this.video = video;
    this.imagen = imagen;
    this.idjob = idjob;
    this.sitio = sitio;
    this.cartel = cartel;
    this.ciudad = ciudad;
    this.servicios = servicios;
    this.imagenes = imagenes;
    this.fecharegistro = fecharegistro;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id_ts;
    case 1: return idpagina;
    case 2: return sexo;
    case 3: return edad;
    case 4: return nombre;
    case 5: return medidas;
    case 6: return seccion;
    case 7: return depilacion;
    case 8: return ubicacion;
    case 9: return horario;
    case 10: return descripcion;
    case 11: return atencion;
    case 12: return telefono;
    case 13: return estatura;
    case 14: return valor;
    case 15: return video;
    case 16: return imagen;
    case 17: return idjob;
    case 18: return sitio;
    case 19: return cartel;
    case 20: return ciudad;
    case 21: return servicios;
    case 22: return imagenes;
    case 23: return fecharegistro;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id_ts = value$ != null ? value$.toString() : null; break;
    case 1: idpagina = (java.lang.Integer)value$; break;
    case 2: sexo = value$ != null ? value$.toString() : null; break;
    case 3: edad = (java.lang.Integer)value$; break;
    case 4: nombre = value$ != null ? value$.toString() : null; break;
    case 5: medidas = value$ != null ? value$.toString() : null; break;
    case 6: seccion = value$ != null ? value$.toString() : null; break;
    case 7: depilacion = value$ != null ? value$.toString() : null; break;
    case 8: ubicacion = value$ != null ? value$.toString() : null; break;
    case 9: horario = value$ != null ? value$.toString() : null; break;
    case 10: descripcion = value$ != null ? value$.toString() : null; break;
    case 11: atencion = value$ != null ? value$.toString() : null; break;
    case 12: telefono = value$ != null ? value$.toString() : null; break;
    case 13: estatura = value$ != null ? value$.toString() : null; break;
    case 14: valor = value$ != null ? value$.toString() : null; break;
    case 15: video = value$ != null ? value$.toString() : null; break;
    case 16: imagen = value$ != null ? value$.toString() : null; break;
    case 17: idjob = (java.lang.Long)value$; break;
    case 18: sitio = value$ != null ? value$.toString() : null; break;
    case 19: cartel = value$ != null ? value$.toString() : null; break;
    case 20: ciudad = value$ != null ? value$.toString() : null; break;
    case 21: servicios = (java.util.List<cl.sugarfever.kafka.avro.Servicio>)value$; break;
    case 22: imagenes = (java.util.List<cl.sugarfever.kafka.avro.Imagen>)value$; break;
    case 23: fecharegistro = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id_ts' field.
   * @return The value of the 'id_ts' field.
   */
  public java.lang.String getIdTs() {
    return id_ts;
  }


  /**
   * Sets the value of the 'id_ts' field.
   * @param value the value to set.
   */
  public void setIdTs(java.lang.String value) {
    this.id_ts = value;
  }

  /**
   * Gets the value of the 'idpagina' field.
   * @return The value of the 'idpagina' field.
   */
  public int getIdpagina() {
    return idpagina;
  }


  /**
   * Sets the value of the 'idpagina' field.
   * @param value the value to set.
   */
  public void setIdpagina(int value) {
    this.idpagina = value;
  }

  /**
   * Gets the value of the 'sexo' field.
   * @return The value of the 'sexo' field.
   */
  public java.lang.String getSexo() {
    return sexo;
  }


  /**
   * Sets the value of the 'sexo' field.
   * @param value the value to set.
   */
  public void setSexo(java.lang.String value) {
    this.sexo = value;
  }

  /**
   * Gets the value of the 'edad' field.
   * @return The value of the 'edad' field.
   */
  public int getEdad() {
    return edad;
  }


  /**
   * Sets the value of the 'edad' field.
   * @param value the value to set.
   */
  public void setEdad(int value) {
    this.edad = value;
  }

  /**
   * Gets the value of the 'nombre' field.
   * @return The value of the 'nombre' field.
   */
  public java.lang.String getNombre() {
    return nombre;
  }


  /**
   * Sets the value of the 'nombre' field.
   * @param value the value to set.
   */
  public void setNombre(java.lang.String value) {
    this.nombre = value;
  }

  /**
   * Gets the value of the 'medidas' field.
   * @return The value of the 'medidas' field.
   */
  public java.lang.String getMedidas() {
    return medidas;
  }


  /**
   * Sets the value of the 'medidas' field.
   * @param value the value to set.
   */
  public void setMedidas(java.lang.String value) {
    this.medidas = value;
  }

  /**
   * Gets the value of the 'seccion' field.
   * @return The value of the 'seccion' field.
   */
  public java.lang.String getSeccion() {
    return seccion;
  }


  /**
   * Sets the value of the 'seccion' field.
   * @param value the value to set.
   */
  public void setSeccion(java.lang.String value) {
    this.seccion = value;
  }

  /**
   * Gets the value of the 'depilacion' field.
   * @return The value of the 'depilacion' field.
   */
  public java.lang.String getDepilacion() {
    return depilacion;
  }


  /**
   * Sets the value of the 'depilacion' field.
   * @param value the value to set.
   */
  public void setDepilacion(java.lang.String value) {
    this.depilacion = value;
  }

  /**
   * Gets the value of the 'ubicacion' field.
   * @return The value of the 'ubicacion' field.
   */
  public java.lang.String getUbicacion() {
    return ubicacion;
  }


  /**
   * Sets the value of the 'ubicacion' field.
   * @param value the value to set.
   */
  public void setUbicacion(java.lang.String value) {
    this.ubicacion = value;
  }

  /**
   * Gets the value of the 'horario' field.
   * @return The value of the 'horario' field.
   */
  public java.lang.String getHorario() {
    return horario;
  }


  /**
   * Sets the value of the 'horario' field.
   * @param value the value to set.
   */
  public void setHorario(java.lang.String value) {
    this.horario = value;
  }

  /**
   * Gets the value of the 'descripcion' field.
   * @return The value of the 'descripcion' field.
   */
  public java.lang.String getDescripcion() {
    return descripcion;
  }


  /**
   * Sets the value of the 'descripcion' field.
   * @param value the value to set.
   */
  public void setDescripcion(java.lang.String value) {
    this.descripcion = value;
  }

  /**
   * Gets the value of the 'atencion' field.
   * @return The value of the 'atencion' field.
   */
  public java.lang.String getAtencion() {
    return atencion;
  }


  /**
   * Sets the value of the 'atencion' field.
   * @param value the value to set.
   */
  public void setAtencion(java.lang.String value) {
    this.atencion = value;
  }

  /**
   * Gets the value of the 'telefono' field.
   * @return The value of the 'telefono' field.
   */
  public java.lang.String getTelefono() {
    return telefono;
  }


  /**
   * Sets the value of the 'telefono' field.
   * @param value the value to set.
   */
  public void setTelefono(java.lang.String value) {
    this.telefono = value;
  }

  /**
   * Gets the value of the 'estatura' field.
   * @return The value of the 'estatura' field.
   */
  public java.lang.String getEstatura() {
    return estatura;
  }


  /**
   * Sets the value of the 'estatura' field.
   * @param value the value to set.
   */
  public void setEstatura(java.lang.String value) {
    this.estatura = value;
  }

  /**
   * Gets the value of the 'valor' field.
   * @return The value of the 'valor' field.
   */
  public java.lang.String getValor() {
    return valor;
  }


  /**
   * Sets the value of the 'valor' field.
   * @param value the value to set.
   */
  public void setValor(java.lang.String value) {
    this.valor = value;
  }

  /**
   * Gets the value of the 'video' field.
   * @return The value of the 'video' field.
   */
  public java.lang.String getVideo() {
    return video;
  }


  /**
   * Sets the value of the 'video' field.
   * @param value the value to set.
   */
  public void setVideo(java.lang.String value) {
    this.video = value;
  }

  /**
   * Gets the value of the 'imagen' field.
   * @return The value of the 'imagen' field.
   */
  public java.lang.String getImagen() {
    return imagen;
  }


  /**
   * Sets the value of the 'imagen' field.
   * @param value the value to set.
   */
  public void setImagen(java.lang.String value) {
    this.imagen = value;
  }

  /**
   * Gets the value of the 'idjob' field.
   * @return The value of the 'idjob' field.
   */
  public long getIdjob() {
    return idjob;
  }


  /**
   * Sets the value of the 'idjob' field.
   * @param value the value to set.
   */
  public void setIdjob(long value) {
    this.idjob = value;
  }

  /**
   * Gets the value of the 'sitio' field.
   * @return The value of the 'sitio' field.
   */
  public java.lang.String getSitio() {
    return sitio;
  }


  /**
   * Sets the value of the 'sitio' field.
   * @param value the value to set.
   */
  public void setSitio(java.lang.String value) {
    this.sitio = value;
  }

  /**
   * Gets the value of the 'cartel' field.
   * @return The value of the 'cartel' field.
   */
  public java.lang.String getCartel() {
    return cartel;
  }


  /**
   * Sets the value of the 'cartel' field.
   * @param value the value to set.
   */
  public void setCartel(java.lang.String value) {
    this.cartel = value;
  }

  /**
   * Gets the value of the 'ciudad' field.
   * @return The value of the 'ciudad' field.
   */
  public java.lang.String getCiudad() {
    return ciudad;
  }


  /**
   * Sets the value of the 'ciudad' field.
   * @param value the value to set.
   */
  public void setCiudad(java.lang.String value) {
    this.ciudad = value;
  }

  /**
   * Gets the value of the 'servicios' field.
   * @return The value of the 'servicios' field.
   */
  public java.util.List<cl.sugarfever.kafka.avro.Servicio> getServicios() {
    return servicios;
  }


  /**
   * Sets the value of the 'servicios' field.
   * @param value the value to set.
   */
  public void setServicios(java.util.List<cl.sugarfever.kafka.avro.Servicio> value) {
    this.servicios = value;
  }

  /**
   * Gets the value of the 'imagenes' field.
   * @return The value of the 'imagenes' field.
   */
  public java.util.List<cl.sugarfever.kafka.avro.Imagen> getImagenes() {
    return imagenes;
  }


  /**
   * Sets the value of the 'imagenes' field.
   * @param value the value to set.
   */
  public void setImagenes(java.util.List<cl.sugarfever.kafka.avro.Imagen> value) {
    this.imagenes = value;
  }

  /**
   * Gets the value of the 'fecharegistro' field.
   * @return The value of the 'fecharegistro' field.
   */
  public long getFecharegistro() {
    return fecharegistro;
  }


  /**
   * Sets the value of the 'fecharegistro' field.
   * @param value the value to set.
   */
  public void setFecharegistro(long value) {
    this.fecharegistro = value;
  }

  /**
   * Creates a new Ts RecordBuilder.
   * @return A new Ts RecordBuilder
   */
  public static cl.sugarfever.kafka.avro.Ts.Builder newBuilder() {
    return new cl.sugarfever.kafka.avro.Ts.Builder();
  }

  /**
   * Creates a new Ts RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Ts RecordBuilder
   */
  public static cl.sugarfever.kafka.avro.Ts.Builder newBuilder(cl.sugarfever.kafka.avro.Ts.Builder other) {
    if (other == null) {
      return new cl.sugarfever.kafka.avro.Ts.Builder();
    } else {
      return new cl.sugarfever.kafka.avro.Ts.Builder(other);
    }
  }

  /**
   * Creates a new Ts RecordBuilder by copying an existing Ts instance.
   * @param other The existing instance to copy.
   * @return A new Ts RecordBuilder
   */
  public static cl.sugarfever.kafka.avro.Ts.Builder newBuilder(cl.sugarfever.kafka.avro.Ts other) {
    if (other == null) {
      return new cl.sugarfever.kafka.avro.Ts.Builder();
    } else {
      return new cl.sugarfever.kafka.avro.Ts.Builder(other);
    }
  }

  /**
   * RecordBuilder for Ts instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Ts>
    implements org.apache.avro.data.RecordBuilder<Ts> {

    private java.lang.String id_ts;
    private int idpagina;
    private java.lang.String sexo;
    private int edad;
    private java.lang.String nombre;
    private java.lang.String medidas;
    private java.lang.String seccion;
    private java.lang.String depilacion;
    private java.lang.String ubicacion;
    private java.lang.String horario;
    private java.lang.String descripcion;
    private java.lang.String atencion;
    private java.lang.String telefono;
    private java.lang.String estatura;
    private java.lang.String valor;
    private java.lang.String video;
    private java.lang.String imagen;
    private long idjob;
    private java.lang.String sitio;
    private java.lang.String cartel;
    private java.lang.String ciudad;
    private java.util.List<cl.sugarfever.kafka.avro.Servicio> servicios;
    private java.util.List<cl.sugarfever.kafka.avro.Imagen> imagenes;
    private long fecharegistro;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cl.sugarfever.kafka.avro.Ts.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id_ts)) {
        this.id_ts = data().deepCopy(fields()[0].schema(), other.id_ts);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.idpagina)) {
        this.idpagina = data().deepCopy(fields()[1].schema(), other.idpagina);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.sexo)) {
        this.sexo = data().deepCopy(fields()[2].schema(), other.sexo);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.edad)) {
        this.edad = data().deepCopy(fields()[3].schema(), other.edad);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.nombre)) {
        this.nombre = data().deepCopy(fields()[4].schema(), other.nombre);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.medidas)) {
        this.medidas = data().deepCopy(fields()[5].schema(), other.medidas);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.seccion)) {
        this.seccion = data().deepCopy(fields()[6].schema(), other.seccion);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.depilacion)) {
        this.depilacion = data().deepCopy(fields()[7].schema(), other.depilacion);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ubicacion)) {
        this.ubicacion = data().deepCopy(fields()[8].schema(), other.ubicacion);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.horario)) {
        this.horario = data().deepCopy(fields()[9].schema(), other.horario);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[10].schema(), other.descripcion);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.atencion)) {
        this.atencion = data().deepCopy(fields()[11].schema(), other.atencion);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.telefono)) {
        this.telefono = data().deepCopy(fields()[12].schema(), other.telefono);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.estatura)) {
        this.estatura = data().deepCopy(fields()[13].schema(), other.estatura);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.valor)) {
        this.valor = data().deepCopy(fields()[14].schema(), other.valor);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.video)) {
        this.video = data().deepCopy(fields()[15].schema(), other.video);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.imagen)) {
        this.imagen = data().deepCopy(fields()[16].schema(), other.imagen);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.idjob)) {
        this.idjob = data().deepCopy(fields()[17].schema(), other.idjob);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.sitio)) {
        this.sitio = data().deepCopy(fields()[18].schema(), other.sitio);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.cartel)) {
        this.cartel = data().deepCopy(fields()[19].schema(), other.cartel);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.ciudad)) {
        this.ciudad = data().deepCopy(fields()[20].schema(), other.ciudad);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.servicios)) {
        this.servicios = data().deepCopy(fields()[21].schema(), other.servicios);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.imagenes)) {
        this.imagenes = data().deepCopy(fields()[22].schema(), other.imagenes);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.fecharegistro)) {
        this.fecharegistro = data().deepCopy(fields()[23].schema(), other.fecharegistro);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
    }

    /**
     * Creates a Builder by copying an existing Ts instance
     * @param other The existing instance to copy.
     */
    private Builder(cl.sugarfever.kafka.avro.Ts other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id_ts)) {
        this.id_ts = data().deepCopy(fields()[0].schema(), other.id_ts);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idpagina)) {
        this.idpagina = data().deepCopy(fields()[1].schema(), other.idpagina);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sexo)) {
        this.sexo = data().deepCopy(fields()[2].schema(), other.sexo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.edad)) {
        this.edad = data().deepCopy(fields()[3].schema(), other.edad);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nombre)) {
        this.nombre = data().deepCopy(fields()[4].schema(), other.nombre);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.medidas)) {
        this.medidas = data().deepCopy(fields()[5].schema(), other.medidas);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.seccion)) {
        this.seccion = data().deepCopy(fields()[6].schema(), other.seccion);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.depilacion)) {
        this.depilacion = data().deepCopy(fields()[7].schema(), other.depilacion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ubicacion)) {
        this.ubicacion = data().deepCopy(fields()[8].schema(), other.ubicacion);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.horario)) {
        this.horario = data().deepCopy(fields()[9].schema(), other.horario);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[10].schema(), other.descripcion);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.atencion)) {
        this.atencion = data().deepCopy(fields()[11].schema(), other.atencion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.telefono)) {
        this.telefono = data().deepCopy(fields()[12].schema(), other.telefono);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.estatura)) {
        this.estatura = data().deepCopy(fields()[13].schema(), other.estatura);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.valor)) {
        this.valor = data().deepCopy(fields()[14].schema(), other.valor);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.video)) {
        this.video = data().deepCopy(fields()[15].schema(), other.video);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.imagen)) {
        this.imagen = data().deepCopy(fields()[16].schema(), other.imagen);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.idjob)) {
        this.idjob = data().deepCopy(fields()[17].schema(), other.idjob);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.sitio)) {
        this.sitio = data().deepCopy(fields()[18].schema(), other.sitio);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.cartel)) {
        this.cartel = data().deepCopy(fields()[19].schema(), other.cartel);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ciudad)) {
        this.ciudad = data().deepCopy(fields()[20].schema(), other.ciudad);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.servicios)) {
        this.servicios = data().deepCopy(fields()[21].schema(), other.servicios);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.imagenes)) {
        this.imagenes = data().deepCopy(fields()[22].schema(), other.imagenes);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.fecharegistro)) {
        this.fecharegistro = data().deepCopy(fields()[23].schema(), other.fecharegistro);
        fieldSetFlags()[23] = true;
      }
    }

    /**
      * Gets the value of the 'id_ts' field.
      * @return The value.
      */
    public java.lang.String getIdTs() {
      return id_ts;
    }


    /**
      * Sets the value of the 'id_ts' field.
      * @param value The value of 'id_ts'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setIdTs(java.lang.String value) {
      validate(fields()[0], value);
      this.id_ts = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id_ts' field has been set.
      * @return True if the 'id_ts' field has been set, false otherwise.
      */
    public boolean hasIdTs() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id_ts' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearIdTs() {
      id_ts = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'idpagina' field.
      * @return The value.
      */
    public int getIdpagina() {
      return idpagina;
    }


    /**
      * Sets the value of the 'idpagina' field.
      * @param value The value of 'idpagina'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setIdpagina(int value) {
      validate(fields()[1], value);
      this.idpagina = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'idpagina' field has been set.
      * @return True if the 'idpagina' field has been set, false otherwise.
      */
    public boolean hasIdpagina() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'idpagina' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearIdpagina() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sexo' field.
      * @return The value.
      */
    public java.lang.String getSexo() {
      return sexo;
    }


    /**
      * Sets the value of the 'sexo' field.
      * @param value The value of 'sexo'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setSexo(java.lang.String value) {
      validate(fields()[2], value);
      this.sexo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sexo' field has been set.
      * @return True if the 'sexo' field has been set, false otherwise.
      */
    public boolean hasSexo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sexo' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearSexo() {
      sexo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'edad' field.
      * @return The value.
      */
    public int getEdad() {
      return edad;
    }


    /**
      * Sets the value of the 'edad' field.
      * @param value The value of 'edad'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setEdad(int value) {
      validate(fields()[3], value);
      this.edad = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'edad' field has been set.
      * @return True if the 'edad' field has been set, false otherwise.
      */
    public boolean hasEdad() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'edad' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearEdad() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombre' field.
      * @return The value.
      */
    public java.lang.String getNombre() {
      return nombre;
    }


    /**
      * Sets the value of the 'nombre' field.
      * @param value The value of 'nombre'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setNombre(java.lang.String value) {
      validate(fields()[4], value);
      this.nombre = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'nombre' field has been set.
      * @return True if the 'nombre' field has been set, false otherwise.
      */
    public boolean hasNombre() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'nombre' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearNombre() {
      nombre = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'medidas' field.
      * @return The value.
      */
    public java.lang.String getMedidas() {
      return medidas;
    }


    /**
      * Sets the value of the 'medidas' field.
      * @param value The value of 'medidas'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setMedidas(java.lang.String value) {
      validate(fields()[5], value);
      this.medidas = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'medidas' field has been set.
      * @return True if the 'medidas' field has been set, false otherwise.
      */
    public boolean hasMedidas() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'medidas' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearMedidas() {
      medidas = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'seccion' field.
      * @return The value.
      */
    public java.lang.String getSeccion() {
      return seccion;
    }


    /**
      * Sets the value of the 'seccion' field.
      * @param value The value of 'seccion'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setSeccion(java.lang.String value) {
      validate(fields()[6], value);
      this.seccion = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'seccion' field has been set.
      * @return True if the 'seccion' field has been set, false otherwise.
      */
    public boolean hasSeccion() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'seccion' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearSeccion() {
      seccion = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'depilacion' field.
      * @return The value.
      */
    public java.lang.String getDepilacion() {
      return depilacion;
    }


    /**
      * Sets the value of the 'depilacion' field.
      * @param value The value of 'depilacion'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setDepilacion(java.lang.String value) {
      validate(fields()[7], value);
      this.depilacion = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'depilacion' field has been set.
      * @return True if the 'depilacion' field has been set, false otherwise.
      */
    public boolean hasDepilacion() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'depilacion' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearDepilacion() {
      depilacion = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion' field.
      * @return The value.
      */
    public java.lang.String getUbicacion() {
      return ubicacion;
    }


    /**
      * Sets the value of the 'ubicacion' field.
      * @param value The value of 'ubicacion'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setUbicacion(java.lang.String value) {
      validate(fields()[8], value);
      this.ubicacion = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion' field has been set.
      * @return True if the 'ubicacion' field has been set, false otherwise.
      */
    public boolean hasUbicacion() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ubicacion' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearUbicacion() {
      ubicacion = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'horario' field.
      * @return The value.
      */
    public java.lang.String getHorario() {
      return horario;
    }


    /**
      * Sets the value of the 'horario' field.
      * @param value The value of 'horario'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setHorario(java.lang.String value) {
      validate(fields()[9], value);
      this.horario = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'horario' field has been set.
      * @return True if the 'horario' field has been set, false otherwise.
      */
    public boolean hasHorario() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'horario' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearHorario() {
      horario = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'descripcion' field.
      * @return The value.
      */
    public java.lang.String getDescripcion() {
      return descripcion;
    }


    /**
      * Sets the value of the 'descripcion' field.
      * @param value The value of 'descripcion'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setDescripcion(java.lang.String value) {
      validate(fields()[10], value);
      this.descripcion = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'descripcion' field has been set.
      * @return True if the 'descripcion' field has been set, false otherwise.
      */
    public boolean hasDescripcion() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'descripcion' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearDescripcion() {
      descripcion = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'atencion' field.
      * @return The value.
      */
    public java.lang.String getAtencion() {
      return atencion;
    }


    /**
      * Sets the value of the 'atencion' field.
      * @param value The value of 'atencion'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setAtencion(java.lang.String value) {
      validate(fields()[11], value);
      this.atencion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'atencion' field has been set.
      * @return True if the 'atencion' field has been set, false otherwise.
      */
    public boolean hasAtencion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'atencion' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearAtencion() {
      atencion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefono' field.
      * @return The value.
      */
    public java.lang.String getTelefono() {
      return telefono;
    }


    /**
      * Sets the value of the 'telefono' field.
      * @param value The value of 'telefono'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setTelefono(java.lang.String value) {
      validate(fields()[12], value);
      this.telefono = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'telefono' field has been set.
      * @return True if the 'telefono' field has been set, false otherwise.
      */
    public boolean hasTelefono() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'telefono' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearTelefono() {
      telefono = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'estatura' field.
      * @return The value.
      */
    public java.lang.String getEstatura() {
      return estatura;
    }


    /**
      * Sets the value of the 'estatura' field.
      * @param value The value of 'estatura'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setEstatura(java.lang.String value) {
      validate(fields()[13], value);
      this.estatura = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'estatura' field has been set.
      * @return True if the 'estatura' field has been set, false otherwise.
      */
    public boolean hasEstatura() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'estatura' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearEstatura() {
      estatura = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'valor' field.
      * @return The value.
      */
    public java.lang.String getValor() {
      return valor;
    }


    /**
      * Sets the value of the 'valor' field.
      * @param value The value of 'valor'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setValor(java.lang.String value) {
      validate(fields()[14], value);
      this.valor = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'valor' field has been set.
      * @return True if the 'valor' field has been set, false otherwise.
      */
    public boolean hasValor() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'valor' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearValor() {
      valor = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'video' field.
      * @return The value.
      */
    public java.lang.String getVideo() {
      return video;
    }


    /**
      * Sets the value of the 'video' field.
      * @param value The value of 'video'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setVideo(java.lang.String value) {
      validate(fields()[15], value);
      this.video = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'video' field has been set.
      * @return True if the 'video' field has been set, false otherwise.
      */
    public boolean hasVideo() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'video' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearVideo() {
      video = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'imagen' field.
      * @return The value.
      */
    public java.lang.String getImagen() {
      return imagen;
    }


    /**
      * Sets the value of the 'imagen' field.
      * @param value The value of 'imagen'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setImagen(java.lang.String value) {
      validate(fields()[16], value);
      this.imagen = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'imagen' field has been set.
      * @return True if the 'imagen' field has been set, false otherwise.
      */
    public boolean hasImagen() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'imagen' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearImagen() {
      imagen = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'idjob' field.
      * @return The value.
      */
    public long getIdjob() {
      return idjob;
    }


    /**
      * Sets the value of the 'idjob' field.
      * @param value The value of 'idjob'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setIdjob(long value) {
      validate(fields()[17], value);
      this.idjob = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'idjob' field has been set.
      * @return True if the 'idjob' field has been set, false otherwise.
      */
    public boolean hasIdjob() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'idjob' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearIdjob() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'sitio' field.
      * @return The value.
      */
    public java.lang.String getSitio() {
      return sitio;
    }


    /**
      * Sets the value of the 'sitio' field.
      * @param value The value of 'sitio'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setSitio(java.lang.String value) {
      validate(fields()[18], value);
      this.sitio = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'sitio' field has been set.
      * @return True if the 'sitio' field has been set, false otherwise.
      */
    public boolean hasSitio() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'sitio' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearSitio() {
      sitio = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'cartel' field.
      * @return The value.
      */
    public java.lang.String getCartel() {
      return cartel;
    }


    /**
      * Sets the value of the 'cartel' field.
      * @param value The value of 'cartel'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setCartel(java.lang.String value) {
      validate(fields()[19], value);
      this.cartel = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'cartel' field has been set.
      * @return True if the 'cartel' field has been set, false otherwise.
      */
    public boolean hasCartel() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'cartel' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearCartel() {
      cartel = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'ciudad' field.
      * @return The value.
      */
    public java.lang.String getCiudad() {
      return ciudad;
    }


    /**
      * Sets the value of the 'ciudad' field.
      * @param value The value of 'ciudad'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setCiudad(java.lang.String value) {
      validate(fields()[20], value);
      this.ciudad = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'ciudad' field has been set.
      * @return True if the 'ciudad' field has been set, false otherwise.
      */
    public boolean hasCiudad() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'ciudad' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearCiudad() {
      ciudad = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'servicios' field.
      * @return The value.
      */
    public java.util.List<cl.sugarfever.kafka.avro.Servicio> getServicios() {
      return servicios;
    }


    /**
      * Sets the value of the 'servicios' field.
      * @param value The value of 'servicios'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setServicios(java.util.List<cl.sugarfever.kafka.avro.Servicio> value) {
      validate(fields()[21], value);
      this.servicios = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'servicios' field has been set.
      * @return True if the 'servicios' field has been set, false otherwise.
      */
    public boolean hasServicios() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'servicios' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearServicios() {
      servicios = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'imagenes' field.
      * @return The value.
      */
    public java.util.List<cl.sugarfever.kafka.avro.Imagen> getImagenes() {
      return imagenes;
    }


    /**
      * Sets the value of the 'imagenes' field.
      * @param value The value of 'imagenes'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setImagenes(java.util.List<cl.sugarfever.kafka.avro.Imagen> value) {
      validate(fields()[22], value);
      this.imagenes = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'imagenes' field has been set.
      * @return True if the 'imagenes' field has been set, false otherwise.
      */
    public boolean hasImagenes() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'imagenes' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearImagenes() {
      imagenes = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'fecharegistro' field.
      * @return The value.
      */
    public long getFecharegistro() {
      return fecharegistro;
    }


    /**
      * Sets the value of the 'fecharegistro' field.
      * @param value The value of 'fecharegistro'.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder setFecharegistro(long value) {
      validate(fields()[23], value);
      this.fecharegistro = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'fecharegistro' field has been set.
      * @return True if the 'fecharegistro' field has been set, false otherwise.
      */
    public boolean hasFecharegistro() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'fecharegistro' field.
      * @return This builder.
      */
    public cl.sugarfever.kafka.avro.Ts.Builder clearFecharegistro() {
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Ts build() {
      try {
        Ts record = new Ts();
        record.id_ts = fieldSetFlags()[0] ? this.id_ts : (java.lang.String) defaultValue(fields()[0]);
        record.idpagina = fieldSetFlags()[1] ? this.idpagina : (java.lang.Integer) defaultValue(fields()[1]);
        record.sexo = fieldSetFlags()[2] ? this.sexo : (java.lang.String) defaultValue(fields()[2]);
        record.edad = fieldSetFlags()[3] ? this.edad : (java.lang.Integer) defaultValue(fields()[3]);
        record.nombre = fieldSetFlags()[4] ? this.nombre : (java.lang.String) defaultValue(fields()[4]);
        record.medidas = fieldSetFlags()[5] ? this.medidas : (java.lang.String) defaultValue(fields()[5]);
        record.seccion = fieldSetFlags()[6] ? this.seccion : (java.lang.String) defaultValue(fields()[6]);
        record.depilacion = fieldSetFlags()[7] ? this.depilacion : (java.lang.String) defaultValue(fields()[7]);
        record.ubicacion = fieldSetFlags()[8] ? this.ubicacion : (java.lang.String) defaultValue(fields()[8]);
        record.horario = fieldSetFlags()[9] ? this.horario : (java.lang.String) defaultValue(fields()[9]);
        record.descripcion = fieldSetFlags()[10] ? this.descripcion : (java.lang.String) defaultValue(fields()[10]);
        record.atencion = fieldSetFlags()[11] ? this.atencion : (java.lang.String) defaultValue(fields()[11]);
        record.telefono = fieldSetFlags()[12] ? this.telefono : (java.lang.String) defaultValue(fields()[12]);
        record.estatura = fieldSetFlags()[13] ? this.estatura : (java.lang.String) defaultValue(fields()[13]);
        record.valor = fieldSetFlags()[14] ? this.valor : (java.lang.String) defaultValue(fields()[14]);
        record.video = fieldSetFlags()[15] ? this.video : (java.lang.String) defaultValue(fields()[15]);
        record.imagen = fieldSetFlags()[16] ? this.imagen : (java.lang.String) defaultValue(fields()[16]);
        record.idjob = fieldSetFlags()[17] ? this.idjob : (java.lang.Long) defaultValue(fields()[17]);
        record.sitio = fieldSetFlags()[18] ? this.sitio : (java.lang.String) defaultValue(fields()[18]);
        record.cartel = fieldSetFlags()[19] ? this.cartel : (java.lang.String) defaultValue(fields()[19]);
        record.ciudad = fieldSetFlags()[20] ? this.ciudad : (java.lang.String) defaultValue(fields()[20]);
        record.servicios = fieldSetFlags()[21] ? this.servicios : (java.util.List<cl.sugarfever.kafka.avro.Servicio>) defaultValue(fields()[21]);
        record.imagenes = fieldSetFlags()[22] ? this.imagenes : (java.util.List<cl.sugarfever.kafka.avro.Imagen>) defaultValue(fields()[22]);
        record.fecharegistro = fieldSetFlags()[23] ? this.fecharegistro : (java.lang.Long) defaultValue(fields()[23]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Ts>
    WRITER$ = (org.apache.avro.io.DatumWriter<Ts>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Ts>
    READER$ = (org.apache.avro.io.DatumReader<Ts>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id_ts);

    out.writeInt(this.idpagina);

    out.writeString(this.sexo);

    out.writeInt(this.edad);

    out.writeString(this.nombre);

    out.writeString(this.medidas);

    out.writeString(this.seccion);

    out.writeString(this.depilacion);

    out.writeString(this.ubicacion);

    out.writeString(this.horario);

    out.writeString(this.descripcion);

    out.writeString(this.atencion);

    out.writeString(this.telefono);

    out.writeString(this.estatura);

    out.writeString(this.valor);

    out.writeString(this.video);

    out.writeString(this.imagen);

    out.writeLong(this.idjob);

    out.writeString(this.sitio);

    out.writeString(this.cartel);

    out.writeString(this.ciudad);

    long size0 = this.servicios.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (cl.sugarfever.kafka.avro.Servicio e0: this.servicios) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.imagenes.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (cl.sugarfever.kafka.avro.Imagen e1: this.imagenes) {
      actualSize1++;
      out.startItem();
      e1.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    out.writeLong(this.fecharegistro);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id_ts = in.readString();

      this.idpagina = in.readInt();

      this.sexo = in.readString();

      this.edad = in.readInt();

      this.nombre = in.readString();

      this.medidas = in.readString();

      this.seccion = in.readString();

      this.depilacion = in.readString();

      this.ubicacion = in.readString();

      this.horario = in.readString();

      this.descripcion = in.readString();

      this.atencion = in.readString();

      this.telefono = in.readString();

      this.estatura = in.readString();

      this.valor = in.readString();

      this.video = in.readString();

      this.imagen = in.readString();

      this.idjob = in.readLong();

      this.sitio = in.readString();

      this.cartel = in.readString();

      this.ciudad = in.readString();

      long size0 = in.readArrayStart();
      java.util.List<cl.sugarfever.kafka.avro.Servicio> a0 = this.servicios;
      if (a0 == null) {
        a0 = new SpecificData.Array<cl.sugarfever.kafka.avro.Servicio>((int)size0, SCHEMA$.getField("servicios").schema());
        this.servicios = a0;
      } else a0.clear();
      SpecificData.Array<cl.sugarfever.kafka.avro.Servicio> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<cl.sugarfever.kafka.avro.Servicio>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          cl.sugarfever.kafka.avro.Servicio e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new cl.sugarfever.kafka.avro.Servicio();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<cl.sugarfever.kafka.avro.Imagen> a1 = this.imagenes;
      if (a1 == null) {
        a1 = new SpecificData.Array<cl.sugarfever.kafka.avro.Imagen>((int)size1, SCHEMA$.getField("imagenes").schema());
        this.imagenes = a1;
      } else a1.clear();
      SpecificData.Array<cl.sugarfever.kafka.avro.Imagen> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<cl.sugarfever.kafka.avro.Imagen>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          cl.sugarfever.kafka.avro.Imagen e1 = (ga1 != null ? ga1.peek() : null);
          if (e1 == null) {
            e1 = new cl.sugarfever.kafka.avro.Imagen();
          }
          e1.customDecode(in);
          a1.add(e1);
        }
      }

      this.fecharegistro = in.readLong();

    } else {
      for (int i = 0; i < 24; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id_ts = in.readString();
          break;

        case 1:
          this.idpagina = in.readInt();
          break;

        case 2:
          this.sexo = in.readString();
          break;

        case 3:
          this.edad = in.readInt();
          break;

        case 4:
          this.nombre = in.readString();
          break;

        case 5:
          this.medidas = in.readString();
          break;

        case 6:
          this.seccion = in.readString();
          break;

        case 7:
          this.depilacion = in.readString();
          break;

        case 8:
          this.ubicacion = in.readString();
          break;

        case 9:
          this.horario = in.readString();
          break;

        case 10:
          this.descripcion = in.readString();
          break;

        case 11:
          this.atencion = in.readString();
          break;

        case 12:
          this.telefono = in.readString();
          break;

        case 13:
          this.estatura = in.readString();
          break;

        case 14:
          this.valor = in.readString();
          break;

        case 15:
          this.video = in.readString();
          break;

        case 16:
          this.imagen = in.readString();
          break;

        case 17:
          this.idjob = in.readLong();
          break;

        case 18:
          this.sitio = in.readString();
          break;

        case 19:
          this.cartel = in.readString();
          break;

        case 20:
          this.ciudad = in.readString();
          break;

        case 21:
          long size0 = in.readArrayStart();
          java.util.List<cl.sugarfever.kafka.avro.Servicio> a0 = this.servicios;
          if (a0 == null) {
            a0 = new SpecificData.Array<cl.sugarfever.kafka.avro.Servicio>((int)size0, SCHEMA$.getField("servicios").schema());
            this.servicios = a0;
          } else a0.clear();
          SpecificData.Array<cl.sugarfever.kafka.avro.Servicio> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<cl.sugarfever.kafka.avro.Servicio>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              cl.sugarfever.kafka.avro.Servicio e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new cl.sugarfever.kafka.avro.Servicio();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 22:
          long size1 = in.readArrayStart();
          java.util.List<cl.sugarfever.kafka.avro.Imagen> a1 = this.imagenes;
          if (a1 == null) {
            a1 = new SpecificData.Array<cl.sugarfever.kafka.avro.Imagen>((int)size1, SCHEMA$.getField("imagenes").schema());
            this.imagenes = a1;
          } else a1.clear();
          SpecificData.Array<cl.sugarfever.kafka.avro.Imagen> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<cl.sugarfever.kafka.avro.Imagen>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              cl.sugarfever.kafka.avro.Imagen e1 = (ga1 != null ? ga1.peek() : null);
              if (e1 == null) {
                e1 = new cl.sugarfever.kafka.avro.Imagen();
              }
              e1.customDecode(in);
              a1.add(e1);
            }
          }
          break;

        case 23:
          this.fecharegistro = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










