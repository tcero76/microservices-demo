version: '3.7'
services:
  config-server:
    image: tcero76/config.server:${SERVICE_VERSION:-latest}
    profiles:
      - scrap
      - back
      - front
    hostname: config-server
    container_name: config-server
    ports:
      - "5004:5004"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5004 -Xms128m -Xmx256m"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME=${GIT_USERNAME}"
      - "SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD=${GIT_PASSWORD}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  scrap-to-postgres:
    image: tcero76/scrap.to.postgres:${SERVICE_VERSION:-latest}
    profiles:
      - scrap
    container_name: scrap-to-postgres
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    entrypoint: ["check-config-server-started.sh"]
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "POSTGRES-CONFIG_URL=jdbc:postgresql://postgres:5432/postgres?currentSchema=catalogo&stringtype=unspecified"
      - "POSTGRES-CONFIG_USERNAME=${POSTGRES_CONFIG_USERNAME}"
      - "POSTGRES-CONFIG_PASSWORD=${POSTGRES_CONFIG_PASSWORD}"
      - "POSTGRES-CONFIG_SHOW-SQL=false"
    depends_on:
      - config-server
      - postgres
    networks:
      - ${GLOBAL_NETWORK:-services}
  outbox-to-kafka:
    image: tcero76/outbox.to.kafka:${SERVICE_VERSION:-latest}
    profiles:
      - back
    container_name: outbox-to-kafka
    entrypoint: ["check-config-server-started.sh"]
    ports:
      - "5006:5006"
    volumes:
      - "./docker-logs:/workspace/outbox-to-kafka/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "POSTGRES-CONFIG_URL=jdbc:postgresql://postgres:5432/postgres?currentSchema=catalogo&stringtype=unspecified"
      - "POSTGRES-CONFIG_USERNAME=${POSTGRES_CONFIG_USERNAME}"
      - "POSTGRES-CONFIG_PASSWORD=${POSTGRES_CONFIG_PASSWORD}"
      - "POSTGRES-CONFIG_SHOW-SQL=false"
      - "KAFKA-CONFIG_TOPIC-NAME=input-catalogo"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_0=input-catalogo"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    depends_on:
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - postgres
    networks:
      - ${GLOBAL_NETWORK:-services}
  kafka-to-elastic:
    image: tcero76/kafka.to.elastic:${SERVICE_VERSION:-latest}
    profiles:
      - back
    container_name: kafka-to-elastic
    entrypoint: ["check-config-server-started.sh"]
    ports:
      - "5007:5007"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic/logs"
      - "./check-kafka-topics-created.sh:/usr/local/bin/check-kafka-topics-created.sh"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx256m"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "KAFKA-CONFIG_TOPIC-NAME=input-catalogo"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_0=input-catalogo"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "ELASTIC-CONFIG_INDEX-NAME=scrap-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    depends_on:
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    networks:
      - ${GLOBAL_NETWORK:-services}
  reactive-elastic-query-service:
    image: tcero76/reactive.elastic.query.service:${SERVICE_VERSION:-latest}
    profiles:
      - front
    container_name: reactive-elastic-query-service
    entrypoint: ["check-config-server-started.sh"]
    user: root
    volumes:
      - "./docker-logs:/workspace/reactive-elastic-query-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    ports:
      - "5008:5008"
      - "8183:8183"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008 -Xms128m -Xmx256m"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=scrap-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "MANAGEMENT.ENDPOINTS.WEB.EXPOSURE.INCLUDE=*"
      - "MANAGEMENT.ENDPOINT.SHUTDOWN.ENABLED=true"
    depends_on:
      - config-server
      - elastic-1
      - elastic-2
      - elastic-3
    networks:
      - ${GLOBAL_NETWORK:-services}
  discovery-service:
    image: tcero76/discovery.service:${SERVICE_VERSION:-latest}
    profiles:
      - front
    container_name: discovery-service
    entrypoint: ["check-config-server-started.sh"]
    user: root
    volumes:
      - "./docker-logs:/workspace/discovery-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    ports:
      - "5009:5009"
      - "8761:8761"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009 -Xms128m -Xmx256m"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    depends_on:
      - config-server
    networks:
      - ${GLOBAL_NETWORK:-services}
  gateway:
    image: tcero76/gateway:${SERVICE_VERSION:-latest}
    profiles:
      - front
    container_name: gateway
    entrypoint: ["check-config-server-started.sh"]
    user: root
    volumes:
      - "./docker-logs:/workspace/gateway/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    ports:
      - "5010:5010"
      - "80:9090"
    links:
      - "redis-master:redis"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms128m -Xmx256m"
      - "SPRING_REDIS_HOST=redis"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
    depends_on:
      - config-server
      - discovery-service
      - redis-master
    networks:
      - ${GLOBAL_NETWORK:-services}
